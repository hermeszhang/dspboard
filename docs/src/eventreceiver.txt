EventReceiver: 

We use DMA to periodically DMA in a whole ECYCLE's worth of events,
and then parse the resulting 1000-byte buffer. We tried doing more
complex things, but PPI timing is tricky and we're low on FPGA
real-estate.

At the moment we DMA in a full word based on ECYCLE using 2-d dma
which is autobuffered. When that's done, we trigger
an interrupt which advances the "nextBufferToProcess" pointer. 

We process events via

processEvents():
  Check if mostRecentProcessedBuffer != nextBufferToProcess and if so, 
  process the buffer by:

  processEvent() processes and dispatches a single event


so ProcessEvent() will 
   if needed, get a new buffer
   then iterate through the bit-set-field, calling the relevant
   event processors with the decoded 

   We use a constant-time dispatch via a two-tier table of lookups, first on the CMD
   and then on the source. 


----------------------------------------------------------------------------

if we're the A DSP, B DSP, C DSP, or D dsp, pick the right set of data
to dispatch on... this is slightly more difficult than I'd like, but
whatever.


parseECYCLE(uint16_t array[512])

dispatchEvent(): dispatch a single event


